name: Compile JSON to Binary Rule-Set

on:
  # 每周1早上4点运行一次
  schedule:
    - cron: 0 20 * * 0 
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install requests

    - name: Generate TENCENT IP CIDR Data
      run: |
        python -c '
        import json
        import requests

        API_TOKEN = "${{ secrets.IPINFO_API_TOKEN }}"
        url = f"https://ipinfo.io/AS132203/json?token={API_TOKEN}"
        response = requests.get(url)

        if response.status_code == 200:
            data = response.json()
            cidr_list = data.get("prefixes", [])

            output = {
                "version": 1,
                "rules": [
                    {
                        "ip_cidr": [cidr["cidr"] for cidr in cidr_list]
                    }
                ]
            }

            with open("tencent.json", "w") as f:
                json.dump(output, f, indent=4)
        else:
            print(f"Error: Unable to fetch data (HTTP {response.status_code})")
        '

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add tencent.json
        git commit -m "Update TENCENT IP CIDR Data"
        git push

  compile:
    needs: generate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download and extract sing-box
      run: |
        wget https://github.com/SagerNet/sing-box/releases/download/v1.9.3/sing-box-1.9.3-linux-amd64.tar.gz
        tar -xzvf sing-box-1.9.3-linux-amd64.tar.gz

    - name: Compile JSON files to binary rule-set
      run: |
        for file in *.json; do
          ./sing-box-1.9.3-linux-amd64/sing-box rule-set compile --output "${file%.json}.srs" "$file"
        done

    - name: Commit and push SRS changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add *.srs
        git diff --quiet && git diff --staged --quiet || (git commit -m "Compile JSON to binary rule-set" && git push)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
